
// -------------------------- START Versioning -------------------------------//
ext.versionFile = file('version.properties')

// this is a configuration task since missing '<<' left shift operator
task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion(){
    //logger.quiet 'Reading the version file.'

    if(!versionFile.exists()){
        throw new GradleException("Required version file does not exist: $versionFile.canonicalPath")
    }
    Properties versionProps = new Properties()

    versionFile.withInputStream {
        stream -> versionProps.load(stream)
    }

    new ProjectVersion(versionProps.major.toInteger(),
    versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }

    @Override
    String toString() {
        "$major.$minor${release ? '' : '-SNAPSHOT'}"
    }
}

task printVersion {
    group = 'versioning'
    description = 'Prints project version'

    doLast{
        logger.quiet "Version: $version"
    }
}
// -------------------------- END Versioning ---------------------------------//

// -------------------------- START Projects ---------------------------------//
allprojects {
    group = 'com.example.cm'
    version = readVersion()
    apply plugin: 'eclipse'
}

subprojects {
    apply plugin: 'java'

    dependencies {
        compile 'javax.inject:javax.inject:1'

		//Spring
		compile 'org.springframework:spring-context:4.2.1.RELEASE'
		compile 'org.springframework:spring-aspects:4.2.1.RELEASE'

		//Testing
		testCompile 'junit:junit:4.11'
		testCompile 'org.springframework:spring-test:4.2.1.RELEASE'
    }
    sourceCompatibility = 1.8
}
// -------------------------- END Projects -----------------------------------//

// -------------------------- START Gradle -----------------------------------//
task wrapper(type: Wrapper){
    gradleVersion = '2.6'
}
// -------------------------- END Gradle -------------------------------------//

// -------------------------- START Eclipse ----------------------------------//
eclipse {
    project {
    	name = 'ContentManager'
    	comment = 'A content management application'
    	referencedProjects 'cm-web', 'cm-repository', 'cm-model'
    }
}
// -------------------------- END Eclipse ------------------------------------//
